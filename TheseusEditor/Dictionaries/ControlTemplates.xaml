<ResourceDictionary x:Class="TheseusEditor.Dictionaries.ControlTemplates"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TheseusEditor.Dictionaries"
                    xmlns:utl="clr-namespace:TheseusEditor.Utilities.Controls">

    <Style TargetType="{x:Type TextBlock}" x:Key="LightTextBlockStyle">
        <Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="cascadia code"/>
    </Style>
    
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{StaticResource Editor.FontBrush}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Button}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush1}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Editor.Window.GrayBrush1}"/>
        <Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Editor.Window.GrayBrush4}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Editor.FontBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource Editor.Disabled.FontBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyle">
        <Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}"/>
        <Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush1}" />
        <Setter Property="BorderBrush" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
        <Setter Property="SelectionBrush" Value="{StaticResource Editor.OrangeBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0, 2" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Editor.OrangeBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
        <EventSetter Event="KeyDown" Handler="OnTextBox_KeyDown" />
        <Setter Property="FontFamily" Value="cascadia code"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyle_WithRename"  BasedOn="{StaticResource TextBoxStyle}" >
        <EventSetter Event="KeyDown" Handler="OnTextBoxRename_KeyDown"/>
        <EventSetter Event="LostFocus"   Handler="OnTextBoxRename_LostFocus" />
        <Setter Property="FontFamily" Value="cascadia code"/>
    </Style>
    
    <Style x:Key="SimpleButton" TargetType="{x:Type Button}">
        <Setter Property="Background"                   Value="{StaticResource Editor.Window.GrayBrush1}" />
        <Setter Property="BorderBrush"                  Value="{StaticResource Editor.Selected.BackgroundBrush}" />
        <Setter Property="Foreground"                   Value="{StaticResource Editor.FontBrush}" />
        <Setter Property="BorderThickness"              Value="0"/>
        <Setter Property="HorizontalContentAlignment"   Value="Center"/>
        <Setter Property="VerticalContentAlignment"     Value="Center"/>
        <Setter Property="VerticalAlignment"            Value="Top"/>
        <Setter Property="Padding"                      Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Editor.Window.GrayBrush3}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="WindowButton" TargetType="{x:Type Button}">
        <Setter Property="Background"                   Value="{StaticResource Editor.Window.GrayBrush1}" />
        <Setter Property="BorderBrush"                  Value="{StaticResource Editor.Selected.BackgroundBrush}" />
        <Setter Property="Foreground"                   Value="{StaticResource Editor.FontBrush}" />
        <Setter Property="BorderThickness"              Value="0"/>
        <Setter Property="HorizontalContentAlignment"   Value="Center"/>
        <Setter Property="VerticalContentAlignment"     Value="Center"/>
        <Setter Property="VerticalAlignment"            Value="Top"/>
        <Setter Property="Padding"                      Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="TheseusWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="BorderBrush"  Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
        <Setter Property="Background"   Value="{StaticResource Editor.Window.GrayBrush1}"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome 
                CornerRadius="0" 
                ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" 
                GlassFrameThickness="0" CaptionHeight="20"
                NonClientFrameEdges="None"
                UseAeroCaptionButtons="False"   />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="1"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                                        <Setter Property="BorderThickness" Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <AdornerDecorator>
                                <ContentPresenter Margin="5, 24, 5, 5"/>
                            </AdornerDecorator>
                            <DockPanel VerticalAlignment="Top" LastChildFill="False">
                                <DockPanel.Resources>
                                    <Style TargetType="Path">
                                        <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource  AncestorType=Button}}"/>
                                        <Setter Property="StrokeThickness" Value="1"/>
                                    </Style>
                                </DockPanel.Resources>
                                
                                <TextBlock Margin="10,2,0,0" VerticalAlignment="Top"
                                           DockPanel.Dock="Left" FontWeight="Bold"
                                           FontSize="14"
                                           Foreground="{StaticResource Editor.FontBrush}"
                                           Text="{TemplateBinding Title}"/>
                                <Button VerticalAlignment="Top">
                                    <Button.Content>
                                        <TextBlock Text="File" FontSize="14"/>
                                    </Button.Content>
                                </Button>
                                <Button VerticalAlignment="Top">
                                    <Button.Content>
                                        <TextBlock Text="Edit" FontSize="14"/>
                                    </Button.Content>
                                </Button>
                                <Button VerticalAlignment="Top">
                                    <Button.Content>
                                        <TextBlock Text="Project" FontSize="14"/>
                                    </Button.Content>
                                </Button>
                                <Button VerticalAlignment="Top">
                                    <Button.Content>
                                        <TextBlock Text="Tools" FontSize="14"/>
                                    </Button.Content>
                                </Button>

                                <Button x:Name="btnClose" Click="OnClose_Button_Click" >
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource WindowButton}">
                                            <Setter Property="Width" Value="40"/>
                                            <Setter Property="Height" Value="35"/>
                                            <Setter Property="Margin" Value="0,2,1,0"/>
                                            <Setter Property="VerticalAlignment" Value="Top"/>
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="DockPanel.Dock" Value="Right"/>
                                            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                            <Style.Triggers>
                                                <Trigger Property="Button.IsMouseOver"  Value="True">
                                                    <Setter Property="Button.Background" Value="{StaticResource Editor.RedBrush}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource Editor.RedBrushDim}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.Content>
                                        <Grid>
                                            <Path Data="M1, 1.5L 12, 12.5" Margin="0"/>
                                            <Path Data="M1, 12.5L 12, 1.5" Margin="0"/>
                                        </Grid>
                                    </Button.Content>
                                    
                                </Button>

                                <Button x:Name="btnRestore" Click="OnMaximizeRestore_Button_Click" >
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource WindowButton}">
                                            <Setter Property="Width" Value="40"/>
                                            <Setter Property="Height" Value="35"/>
                                            <Setter Property="Margin" Value="0,2,1,0"/>
                                            <Setter Property="VerticalAlignment" Value="Top"/>
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="DockPanel.Dock" Value="Right"/>
                                            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                            <Style.Triggers>
                                                <Trigger Property="Button.IsMouseOver"  Value="True">
                                                    <Setter Property="Button.Background" Value="{StaticResource Editor.Window.GrayBrush3}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.Content>
                                        <Rectangle Stroke="{StaticResource Editor.FontBrush}" StrokeThickness="1"
                                                   Width="12" Height="12"/>
                                    </Button.Content>
                                </Button>
                                <Button x:Name="btnMinimize" Click="OnMinimize_Button_Click" >
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource WindowButton}">
                                            <Setter Property="Width" Value="40"/>
                                            <Setter Property="Height" Value="35"/>
                                            <Setter Property="Margin" Value="0,2,1,0"/>
                                            <Setter Property="VerticalAlignment" Value="Top"/>
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="DockPanel.Dock" Value="Right"/>
                                            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                            <Style.Triggers>
                                                <Trigger Property="Button.IsMouseOver"  Value="True">
                                                    <Setter Property="Button.Background" Value="{StaticResource Editor.Window.GrayBrush3}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.Content>
                                        <Rectangle Stroke="{StaticResource Editor.FontBrush}" StrokeThickness="1"
                                                   Width="12" Height="1" Margin="0,4,0,0"/>
                                    </Button.Content>
                                </Button>
                                
                                
                            </DockPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type ListBoxItem}" x:Key="ListBoxItemStyle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,2, 0, 2" />
        <Setter Property="HorizontalContentAlignment" 
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" 
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="true">
                        <ContentPresenter   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Editor.Selected.BackgroundBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Editor.Window.GrayBrush4}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Editor.Selected.BackgroundBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource Editor.Disabled.FontBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemStyle}" />
        <Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush2}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" Padding="1" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Editor.FontBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="TheseusDialogStyle" TargetType="{x:Type Window}">
        <Setter Property="BorderBrush"  Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
        <Setter Property="Background"   Value="{StaticResource Editor.Window.GrayBrush1}"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome 
                CornerRadius="0" 
                ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" 
                GlassFrameThickness="0" CaptionHeight="20"
                NonClientFrameEdges="None"
                UseAeroCaptionButtons="False"   />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="1"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                                        <Setter Property="BorderThickness" Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <AdornerDecorator>
                                <ContentPresenter Margin="5, 24, 5, 5"/>
                            </AdornerDecorator>
                            <DockPanel VerticalAlignment="Top" LastChildFill="False">
                                <DockPanel.Resources>
                                    <Style TargetType="Path">
                                        <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource  AncestorType=Button}}"/>
                                        <Setter Property="StrokeThickness" Value="1"/>
                                    </Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource WindowButton}">
                                        <Setter Property="Width" Value="40"/>
                                        <Setter Property="Height" Value="35"/>
                                        <Setter Property="Margin" Value="0,2,1,0"/>
                                        <Setter Property="VerticalAlignment" Value="Top"/>
                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                        <Setter Property="DockPanel.Dock" Value="Right"/>
                                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                    </Style>
                                </DockPanel.Resources>

                                <TextBlock Margin="2,2,0,0" VerticalAlignment="Top"
                                           DockPanel.Dock="Left" FontWeight="Bold"
                                           FontSize="14"
                                           Foreground="{StaticResource Editor.FontBrush}"
                                           Text="{TemplateBinding Title}"/>

                                <Button x:Name="btnClose" Click="OnClose_Button_Click" >
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource WindowButton}">
                                            <Setter Property="Width" Value="40"/>
                                            <Setter Property="Height" Value="35"/>
                                            <Setter Property="Margin" Value="0,2,1,0"/>
                                            <Setter Property="VerticalAlignment" Value="Top"/>
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="DockPanel.Dock" Value="Right"/>
                                            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                            <Style.Triggers>
                                                <Trigger Property="Button.IsMouseOver"  Value="True">
                                                    <Setter Property="Button.Background" Value="{StaticResource Editor.RedBrush}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource Editor.RedBrushDim}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Button.Content>
                                        <Grid>
                                            <Path Data="M1, 1.5L 12, 12.5" Margin="0"/>
                                            <Path Data="M1, 12.5L 12, 1.5" Margin="0"/>
                                        </Grid>
                                    </Button.Content>
                                </Button>

                            </DockPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type utl:NumberBox}" x:Key="{x:Type utl:NumberBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type utl:NumberBox}">
                    <Grid>
                        <TextBlock x:Name="PART_textBlock"
                                   Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                                   HorizontalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Cursor" Value="SizeWE"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <TextBox x:Name="PART_textBox" BorderThickness="0" Padding="0"
                                 Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=Explicit}" 
                                 Foreground="{TemplateBinding Foreground}" Visibility="Collapsed"
                                 Style="{StaticResource TextBoxStyle_WithRename}" HorizontalContentAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Visibility, ElementName=PART_textBox}" Value="Visible">
                            <Setter Property="Visibility" TargetName="PART_textBlock" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Value, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                            <Setter Property="Background" TargetName="PART_textBlock" Value="{StaticResource Editor.Disabled.FontBrush}" />
                            <Setter Property="ToolTip" TargetName="PART_textBlock" Value="Mixed values"/>
                            <Setter Property="MinWidth" TargetName="PART_textBlock" Value="20"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type utl:VectorBox}" x:Key="{x:Type utl:VectorBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush2}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Editor.Window.GrayBrush5}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type utl:VectorBox}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type utl:NumberBox}" BasedOn="{StaticResource {x:Type utl:NumberBox}}">
                            <Setter Property="MinWidth" Value="50"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="ToolTipService.InitialShowDelay" Value="3000"/>
                            <Setter Property="ToolTipService.BetweenShowDelay" Value="1000"/>
                            <Setter Property="Multiplier" Value="{Binding Multiplier, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Style>
                    </ControlTemplate.Resources>

                    <Border x:Name="border" SnapsToDevicePixels="true" Margin="0,2,0,3"
                            Background="{TemplateBinding Background}" Padding="5,2"
                            BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="columnDefinition0"/>
                                <ColumnDefinition x:Name="columnDefinition1"/>
                                <ColumnDefinition x:Name="columnDefinition2"/>
                                <ColumnDefinition x:Name="columnDefinition3"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="rowDefinition0"/>
                                <RowDefinition x:Name="rowDefinition1"/>
                                <RowDefinition x:Name="rowDefinition2"/>
                                <RowDefinition x:Name="rowDefinition3"/>
                            </Grid.RowDefinitions>
                            <utl:NumberBox x:Name="nbX" Foreground="{StaticResource Editor.RedBrush}"   Value="{Binding X, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="X value"/>
                            <utl:NumberBox x:Name="nbY" Foreground="{StaticResource Editor.GreenBrush}" Value="{Binding Y, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="Y value"/>
                            <utl:NumberBox x:Name="nbZ" Foreground="{StaticResource Editor.BlueBrush}"  Value="{Binding Z, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="Z value"/>
                            <utl:NumberBox x:Name="nbW" Foreground="{StaticResource Editor.FontBrush}"  Value="{Binding W, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="W value" Visibility="Collapsed"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical">
                            <Setter Property="Grid.Row"     TargetName="nbX"                 Value="0"/>
                            <Setter Property="Grid.Row"     TargetName="nbY"                 Value="1"/>
                            <Setter Property="Grid.Row"     TargetName="nbZ"                 Value="2"/>
                            <Setter Property="Grid.Row"     TargetName="nbW"                 Value="3"/>
                            <Setter Property="Width"        TargetName="columnDefinition1"   Value="auto"/>
                            <Setter Property="Width"        TargetName="columnDefinition2"   Value="auto"/>
                            <Setter Property="Width"        TargetName="columnDefinition3"   Value="auto"/>

                        </DataTrigger>
                        <DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource Self}}" Value="Horizontal">
                            <Setter Property="Grid.Column"  TargetName="nbX"                Value="0"/>
                            <Setter Property="Grid.Column"  TargetName="nbY"                Value="1"/>
                            <Setter Property="Grid.Column"  TargetName="nbZ"                Value="2"/>
                            <Setter Property="Grid.Column"  TargetName="nbW"                Value="3"/>
                            <Setter Property="Height"       TargetName="rowDefinition1"     Value="auto"/>
                            <Setter Property="Height"       TargetName="rowDefinition2"     Value="auto"/>
                            <Setter Property="Height"       TargetName="rowDefinition3"     Value="auto"/>

                        </DataTrigger>
                        <DataTrigger Binding="{Binding VectorType, RelativeSource={RelativeSource Self}}" Value="Vector2">
                            <Setter Property="Width"        TargetName="columnDefinition2"  Value="auto"/>
                            <Setter Property="Width"        TargetName="columnDefinition3"  Value="auto"/>
                            <Setter Property="Height"       TargetName="rowDefinition2"     Value="auto"/>
                            <Setter Property="Height"       TargetName="rowDefinition3"     Value="auto"/>
                            <Setter Property="Visibility"   TargetName="nbZ"                Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding VectorType, RelativeSource={RelativeSource Self}}" Value="Vector3">
                            <Setter Property="Width"        TargetName="columnDefinition3"  Value="auto"/>
                            <Setter Property="Height"       TargetName="rowDefinition3"     Value="auto"/>

                        </DataTrigger>
                        <DataTrigger Binding="{Binding VectorType, RelativeSource={RelativeSource Self}}" Value="Vector4">
                            <Setter Property="Visibility"   TargetName="nbW"                Value="Visible"/>

                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Editor.Window.GrayBrush6}"/>
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.5"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type utl:ScalarBox}" x:Key="{x:Type utl:ScalarBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush2}"/>
        <Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Editor.Window.GrayBrush5}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="3000"/>
        <Setter Property="ToolTipService.BetweenShowDelay" Value="1000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type utl:ScalarBox}">
                    <Border x:Name="border" SnapsToDevicePixels="true" Margin="0,2,0,3"
                            Background="{TemplateBinding Background}" Padding="5,2"
                            BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="grid" MinWidth="50">
                            <TextBlock x:Name="PART_textBlock"
                                   Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                                   HorizontalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Cursor" Value="SizeWE"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <TextBox x:Name="PART_textBox" BorderThickness="0" Padding="0"
                                 Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=Explicit}" 
                                 Foreground="{TemplateBinding Foreground}" Visibility="Collapsed"
                                 Style="{StaticResource TextBoxStyle_WithRename}" HorizontalContentAlignment="Center"/>
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Editor.Window.GrayBrush6}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.5"/>
                        </Trigger>
                        
                        <DataTrigger Binding="{Binding Visibility, ElementName=PART_textBox}" Value="Visible">
                            <Setter Property="Visibility" TargetName="PART_textBlock" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Value, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                            <Setter Property="Background" TargetName="PART_textBlock" Value="{StaticResource Editor.Disabled.FontBrush}" />
                            <Setter Property="ToolTip" TargetName="PART_textBlock" Value="Mixed values"/>
                            <Setter Property="MinWidth" TargetName="PART_textBlock" Value="20"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>
    


</ResourceDictionary>